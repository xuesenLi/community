<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lxs.community.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.lxs.community.model.User">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="account_id" jdbcType="VARCHAR" property="accountId"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="token" jdbcType="VARCHAR" property="token"/>
        <result column="bio" jdbcType="VARCHAR" property="bio"/>
        <result column="avatar_url" jdbcType="VARCHAR" property="avatarUrl"/>
        <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate"/>
        <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, account_id, name, email, password, token, bio, avatar_url, gmt_create, gmt_modified
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from user
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.lxs.community.model.User">
        insert into user (id, account_id, name,
        email, password, token,
        bio, avatar_url, gmt_create,
        gmt_modified)
        values (#{id,jdbcType=INTEGER}, #{accountId,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
        #{email,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{token,jdbcType=VARCHAR},
        #{bio,jdbcType=VARCHAR}, #{avatarUrl,jdbcType=VARCHAR}, #{gmtCreate,jdbcType=TIMESTAMP},
        #{gmtModified,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.lxs.community.model.User">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="accountId != null">
                account_id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="token != null">
                token,
            </if>
            <if test="bio != null">
                bio,
            </if>
            <if test="avatarUrl != null">
                avatar_url,
            </if>
            <if test="gmtCreate != null">
                gmt_create,
            </if>
            <if test="gmtModified != null">
                gmt_modified,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="accountId != null">
                #{accountId,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="token != null">
                #{token,jdbcType=VARCHAR},
            </if>
            <if test="bio != null">
                #{bio,jdbcType=VARCHAR},
            </if>
            <if test="avatarUrl != null">
                #{avatarUrl,jdbcType=VARCHAR},
            </if>
            <if test="gmtCreate != null">
                #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null">
                #{gmtModified,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.lxs.community.model.User">
        update user
        <set>
            <if test="accountId != null">
                account_id = #{accountId,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="token != null">
                token = #{token,jdbcType=VARCHAR},
            </if>
            <if test="bio != null">
                bio = #{bio,jdbcType=VARCHAR},
            </if>
            <if test="avatarUrl != null">
                avatar_url = #{avatarUrl,jdbcType=VARCHAR},
            </if>
            <if test="gmtCreate != null">
                gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null">
                gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.lxs.community.model.User">
        update user
        set account_id = #{accountId,jdbcType=VARCHAR},
        name = #{name,jdbcType=VARCHAR},
        email = #{email,jdbcType=VARCHAR},
        password = #{password,jdbcType=VARCHAR},
        token = #{token,jdbcType=VARCHAR},
        bio = #{bio,jdbcType=VARCHAR},
        avatar_url = #{avatarUrl,jdbcType=VARCHAR},
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>


    <select id="countByEmail" parameterType="java.lang.String" resultType="java.lang.Integer">
        select
        count(1)
        from user
        where email = #{email,jdbcType=VARCHAR}
    </select>


    <select id="selectByEmail" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where email = #{email,jdbcType=VARCHAR}
    </select>


    <select id="selectByAccountId" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where account_id = #{accountId,jdbcType=VARCHAR}
    </select>

    <select id="selectByToken" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where token = #{token,jdbcType=VARCHAR}
    </select>

    <select id="selectByIdSet" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        <where>
            id in
            <if test="fIdSet != null">
                <foreach collection="fIdSet" index="index" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>

    </select>

</mapper>
